// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/contrib/tpu/proto/tpu_embedding_config.proto

#include "tensorflow/contrib/tpu/proto/tpu_embedding_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace tensorflow {
namespace tpu {
class TPUEmbeddingConfiguration_GradientDescentOptimizerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TPUEmbeddingConfiguration_GradientDescentOptimizer>
      _instance;
} _TPUEmbeddingConfiguration_GradientDescentOptimizer_default_instance_;
class TPUEmbeddingConfiguration_AdagradOptimizerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TPUEmbeddingConfiguration_AdagradOptimizer>
      _instance;
} _TPUEmbeddingConfiguration_AdagradOptimizer_default_instance_;
class TPUEmbeddingConfiguration_TPUEmbeddingTableDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TPUEmbeddingConfiguration_TPUEmbeddingTable>
      _instance;
  const ::tensorflow::tpu::TPUEmbeddingConfiguration_GradientDescentOptimizer* gradient_descent_;
  const ::tensorflow::tpu::TPUEmbeddingConfiguration_AdagradOptimizer* adagrad_;
} _TPUEmbeddingConfiguration_TPUEmbeddingTable_default_instance_;
class TPUEmbeddingConfigurationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TPUEmbeddingConfiguration>
      _instance;
} _TPUEmbeddingConfiguration_default_instance_;
}  // namespace tpu
}  // namespace tensorflow
namespace protobuf_tensorflow_2fcontrib_2ftpu_2fproto_2ftpu_5fembedding_5fconfig_2eproto {
void InitDefaultsTPUEmbeddingConfiguration_GradientDescentOptimizerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::tensorflow::tpu::_TPUEmbeddingConfiguration_GradientDescentOptimizer_default_instance_;
    new (ptr) ::tensorflow::tpu::TPUEmbeddingConfiguration_GradientDescentOptimizer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::tpu::TPUEmbeddingConfiguration_GradientDescentOptimizer::InitAsDefaultInstance();
}

void InitDefaultsTPUEmbeddingConfiguration_GradientDescentOptimizer() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTPUEmbeddingConfiguration_GradientDescentOptimizerImpl);
}

void InitDefaultsTPUEmbeddingConfiguration_AdagradOptimizerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::tensorflow::tpu::_TPUEmbeddingConfiguration_AdagradOptimizer_default_instance_;
    new (ptr) ::tensorflow::tpu::TPUEmbeddingConfiguration_AdagradOptimizer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::tpu::TPUEmbeddingConfiguration_AdagradOptimizer::InitAsDefaultInstance();
}

void InitDefaultsTPUEmbeddingConfiguration_AdagradOptimizer() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTPUEmbeddingConfiguration_AdagradOptimizerImpl);
}

void InitDefaultsTPUEmbeddingConfiguration_TPUEmbeddingTableImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_tensorflow_2fcontrib_2ftpu_2fproto_2ftpu_5fembedding_5fconfig_2eproto::InitDefaultsTPUEmbeddingConfiguration_GradientDescentOptimizer();
  protobuf_tensorflow_2fcontrib_2ftpu_2fproto_2ftpu_5fembedding_5fconfig_2eproto::InitDefaultsTPUEmbeddingConfiguration_AdagradOptimizer();
  {
    void* ptr = &::tensorflow::tpu::_TPUEmbeddingConfiguration_TPUEmbeddingTable_default_instance_;
    new (ptr) ::tensorflow::tpu::TPUEmbeddingConfiguration_TPUEmbeddingTable();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::tpu::TPUEmbeddingConfiguration_TPUEmbeddingTable::InitAsDefaultInstance();
}

void InitDefaultsTPUEmbeddingConfiguration_TPUEmbeddingTable() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTPUEmbeddingConfiguration_TPUEmbeddingTableImpl);
}

void InitDefaultsTPUEmbeddingConfigurationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_tensorflow_2fcontrib_2ftpu_2fproto_2ftpu_5fembedding_5fconfig_2eproto::InitDefaultsTPUEmbeddingConfiguration_TPUEmbeddingTable();
  {
    void* ptr = &::tensorflow::tpu::_TPUEmbeddingConfiguration_default_instance_;
    new (ptr) ::tensorflow::tpu::TPUEmbeddingConfiguration();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tensorflow::tpu::TPUEmbeddingConfiguration::InitAsDefaultInstance();
}

void InitDefaultsTPUEmbeddingConfiguration() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTPUEmbeddingConfigurationImpl);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::TPUEmbeddingConfiguration_GradientDescentOptimizer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::TPUEmbeddingConfiguration_GradientDescentOptimizer, learning_rate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::TPUEmbeddingConfiguration_AdagradOptimizer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::TPUEmbeddingConfiguration_AdagradOptimizer, learning_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::TPUEmbeddingConfiguration_AdagradOptimizer, initial_accumulator_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::TPUEmbeddingConfiguration_TPUEmbeddingTable, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::TPUEmbeddingConfiguration_TPUEmbeddingTable, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::TPUEmbeddingConfiguration_TPUEmbeddingTable, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::TPUEmbeddingConfiguration_TPUEmbeddingTable, num_rows_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::TPUEmbeddingConfiguration_TPUEmbeddingTable, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::TPUEmbeddingConfiguration_TPUEmbeddingTable, num_features_),
  offsetof(::tensorflow::tpu::TPUEmbeddingConfiguration_TPUEmbeddingTableDefaultTypeInternal, gradient_descent_),
  offsetof(::tensorflow::tpu::TPUEmbeddingConfiguration_TPUEmbeddingTableDefaultTypeInternal, adagrad_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::TPUEmbeddingConfiguration_TPUEmbeddingTable, optimizer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::TPUEmbeddingConfiguration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::TPUEmbeddingConfiguration, model_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::TPUEmbeddingConfiguration, num_hosts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::TPUEmbeddingConfiguration, num_tensornodes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::TPUEmbeddingConfiguration, batch_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::tensorflow::tpu::TPUEmbeddingConfiguration, table_config_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tensorflow::tpu::TPUEmbeddingConfiguration_GradientDescentOptimizer)},
  { 6, -1, sizeof(::tensorflow::tpu::TPUEmbeddingConfiguration_AdagradOptimizer)},
  { 13, -1, sizeof(::tensorflow::tpu::TPUEmbeddingConfiguration_TPUEmbeddingTable)},
  { 25, -1, sizeof(::tensorflow::tpu::TPUEmbeddingConfiguration)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::tpu::_TPUEmbeddingConfiguration_GradientDescentOptimizer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::tpu::_TPUEmbeddingConfiguration_AdagradOptimizer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::tpu::_TPUEmbeddingConfiguration_TPUEmbeddingTable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::tensorflow::tpu::_TPUEmbeddingConfiguration_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "tensorflow/contrib/tpu/proto/tpu_embedding_config.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n7tensorflow/contrib/tpu/proto/tpu_embed"
      "ding_config.proto\022\016tensorflow.tpu\"\300\005\n\031TP"
      "UEmbeddingConfiguration\022G\n\nmodel_mode\030\001 "
      "\001(\01623.tensorflow.tpu.TPUEmbeddingConfigu"
      "ration.ModelMode\022\021\n\tnum_hosts\030\002 \001(\005\022\027\n\017n"
      "um_tensornodes\030\003 \001(\005\022\022\n\nbatch_size\030\004 \001(\005"
      "\022Q\n\014table_config\030\005 \003(\0132;.tensorflow.tpu."
      "TPUEmbeddingConfiguration.TPUEmbeddingTa"
      "ble\0321\n\030GradientDescentOptimizer\022\025\n\rlearn"
      "ing_rate\030\001 \001(\002\032F\n\020AdagradOptimizer\022\025\n\rle"
      "arning_rate\030\001 \001(\002\022\033\n\023initial_accumulator"
      "\030\002 \001(\002\032\224\002\n\021TPUEmbeddingTable\022\014\n\004name\030\001 \001"
      "(\t\022\020\n\010num_rows\030\003 \001(\005\022\r\n\005width\030\004 \001(\005\022\024\n\014n"
      "um_features\030\005 \001(\005\022^\n\020gradient_descent\030\006 "
      "\001(\0132B.tensorflow.tpu.TPUEmbeddingConfigu"
      "ration.GradientDescentOptimizerH\000\022M\n\007ada"
      "grad\030\007 \001(\0132:.tensorflow.tpu.TPUEmbedding"
      "Configuration.AdagradOptimizerH\000B\013\n\topti"
      "mizer\"5\n\tModelMode\022\013\n\007INVALID\020\000\022\014\n\010TRAIN"
      "ING\020\001\022\r\n\tINFERENCE\020\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 788);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "tensorflow/contrib/tpu/proto/tpu_embedding_config.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_tensorflow_2fcontrib_2ftpu_2fproto_2ftpu_5fembedding_5fconfig_2eproto
namespace tensorflow {
namespace tpu {
const ::google::protobuf::EnumDescriptor* TPUEmbeddingConfiguration_ModelMode_descriptor() {
  protobuf_tensorflow_2fcontrib_2ftpu_2fproto_2ftpu_5fembedding_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_tensorflow_2fcontrib_2ftpu_2fproto_2ftpu_5fembedding_5fconfig_2eproto::file_level_enum_descriptors[0];
}
bool TPUEmbeddingConfiguration_ModelMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TPUEmbeddingConfiguration_ModelMode TPUEmbeddingConfiguration::INVALID;
const TPUEmbeddingConfiguration_ModelMode TPUEmbeddingConfiguration::TRAINING;
const TPUEmbeddingConfiguration_ModelMode TPUEmbeddingConfiguration::INFERENCE;
const TPUEmbeddingConfiguration_ModelMode TPUEmbeddingConfiguration::ModelMode_MIN;
const TPUEmbeddingConfiguration_ModelMode TPUEmbeddingConfiguration::ModelMode_MAX;
const int TPUEmbeddingConfiguration::ModelMode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void TPUEmbeddingConfiguration_GradientDescentOptimizer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TPUEmbeddingConfiguration_GradientDescentOptimizer::kLearningRateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TPUEmbeddingConfiguration_GradientDescentOptimizer::TPUEmbeddingConfiguration_GradientDescentOptimizer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tensorflow_2fcontrib_2ftpu_2fproto_2ftpu_5fembedding_5fconfig_2eproto::InitDefaultsTPUEmbeddingConfiguration_GradientDescentOptimizer();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer)
}
TPUEmbeddingConfiguration_GradientDescentOptimizer::TPUEmbeddingConfiguration_GradientDescentOptimizer(const TPUEmbeddingConfiguration_GradientDescentOptimizer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  learning_rate_ = from.learning_rate_;
  // @@protoc_insertion_point(copy_constructor:tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer)
}

void TPUEmbeddingConfiguration_GradientDescentOptimizer::SharedCtor() {
  learning_rate_ = 0;
  _cached_size_ = 0;
}

TPUEmbeddingConfiguration_GradientDescentOptimizer::~TPUEmbeddingConfiguration_GradientDescentOptimizer() {
  // @@protoc_insertion_point(destructor:tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer)
  SharedDtor();
}

void TPUEmbeddingConfiguration_GradientDescentOptimizer::SharedDtor() {
}

void TPUEmbeddingConfiguration_GradientDescentOptimizer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPUEmbeddingConfiguration_GradientDescentOptimizer::descriptor() {
  ::protobuf_tensorflow_2fcontrib_2ftpu_2fproto_2ftpu_5fembedding_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcontrib_2ftpu_2fproto_2ftpu_5fembedding_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TPUEmbeddingConfiguration_GradientDescentOptimizer& TPUEmbeddingConfiguration_GradientDescentOptimizer::default_instance() {
  ::protobuf_tensorflow_2fcontrib_2ftpu_2fproto_2ftpu_5fembedding_5fconfig_2eproto::InitDefaultsTPUEmbeddingConfiguration_GradientDescentOptimizer();
  return *internal_default_instance();
}


void TPUEmbeddingConfiguration_GradientDescentOptimizer::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  learning_rate_ = 0;
  _internal_metadata_.Clear();
}

bool TPUEmbeddingConfiguration_GradientDescentOptimizer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float learning_rate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &learning_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer)
  return false;
#undef DO_
}

void TPUEmbeddingConfiguration_GradientDescentOptimizer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float learning_rate = 1;
  if (this->learning_rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->learning_rate(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer)
}

::google::protobuf::uint8* TPUEmbeddingConfiguration_GradientDescentOptimizer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float learning_rate = 1;
  if (this->learning_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->learning_rate(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer)
  return target;
}

size_t TPUEmbeddingConfiguration_GradientDescentOptimizer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float learning_rate = 1;
  if (this->learning_rate() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPUEmbeddingConfiguration_GradientDescentOptimizer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer)
  GOOGLE_DCHECK_NE(&from, this);
  const TPUEmbeddingConfiguration_GradientDescentOptimizer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TPUEmbeddingConfiguration_GradientDescentOptimizer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer)
    MergeFrom(*source);
  }
}

void TPUEmbeddingConfiguration_GradientDescentOptimizer::MergeFrom(const TPUEmbeddingConfiguration_GradientDescentOptimizer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.learning_rate() != 0) {
    set_learning_rate(from.learning_rate());
  }
}

void TPUEmbeddingConfiguration_GradientDescentOptimizer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPUEmbeddingConfiguration_GradientDescentOptimizer::CopyFrom(const TPUEmbeddingConfiguration_GradientDescentOptimizer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPUEmbeddingConfiguration_GradientDescentOptimizer::IsInitialized() const {
  return true;
}

void TPUEmbeddingConfiguration_GradientDescentOptimizer::Swap(TPUEmbeddingConfiguration_GradientDescentOptimizer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TPUEmbeddingConfiguration_GradientDescentOptimizer::InternalSwap(TPUEmbeddingConfiguration_GradientDescentOptimizer* other) {
  using std::swap;
  swap(learning_rate_, other->learning_rate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TPUEmbeddingConfiguration_GradientDescentOptimizer::GetMetadata() const {
  protobuf_tensorflow_2fcontrib_2ftpu_2fproto_2ftpu_5fembedding_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcontrib_2ftpu_2fproto_2ftpu_5fembedding_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TPUEmbeddingConfiguration_AdagradOptimizer::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TPUEmbeddingConfiguration_AdagradOptimizer::kLearningRateFieldNumber;
const int TPUEmbeddingConfiguration_AdagradOptimizer::kInitialAccumulatorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TPUEmbeddingConfiguration_AdagradOptimizer::TPUEmbeddingConfiguration_AdagradOptimizer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tensorflow_2fcontrib_2ftpu_2fproto_2ftpu_5fembedding_5fconfig_2eproto::InitDefaultsTPUEmbeddingConfiguration_AdagradOptimizer();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer)
}
TPUEmbeddingConfiguration_AdagradOptimizer::TPUEmbeddingConfiguration_AdagradOptimizer(const TPUEmbeddingConfiguration_AdagradOptimizer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&learning_rate_, &from.learning_rate_,
    static_cast<size_t>(reinterpret_cast<char*>(&initial_accumulator_) -
    reinterpret_cast<char*>(&learning_rate_)) + sizeof(initial_accumulator_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer)
}

void TPUEmbeddingConfiguration_AdagradOptimizer::SharedCtor() {
  ::memset(&learning_rate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&initial_accumulator_) -
      reinterpret_cast<char*>(&learning_rate_)) + sizeof(initial_accumulator_));
  _cached_size_ = 0;
}

TPUEmbeddingConfiguration_AdagradOptimizer::~TPUEmbeddingConfiguration_AdagradOptimizer() {
  // @@protoc_insertion_point(destructor:tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer)
  SharedDtor();
}

void TPUEmbeddingConfiguration_AdagradOptimizer::SharedDtor() {
}

void TPUEmbeddingConfiguration_AdagradOptimizer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPUEmbeddingConfiguration_AdagradOptimizer::descriptor() {
  ::protobuf_tensorflow_2fcontrib_2ftpu_2fproto_2ftpu_5fembedding_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcontrib_2ftpu_2fproto_2ftpu_5fembedding_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TPUEmbeddingConfiguration_AdagradOptimizer& TPUEmbeddingConfiguration_AdagradOptimizer::default_instance() {
  ::protobuf_tensorflow_2fcontrib_2ftpu_2fproto_2ftpu_5fembedding_5fconfig_2eproto::InitDefaultsTPUEmbeddingConfiguration_AdagradOptimizer();
  return *internal_default_instance();
}


void TPUEmbeddingConfiguration_AdagradOptimizer::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&learning_rate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&initial_accumulator_) -
      reinterpret_cast<char*>(&learning_rate_)) + sizeof(initial_accumulator_));
  _internal_metadata_.Clear();
}

bool TPUEmbeddingConfiguration_AdagradOptimizer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float learning_rate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &learning_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float initial_accumulator = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &initial_accumulator_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer)
  return false;
#undef DO_
}

void TPUEmbeddingConfiguration_AdagradOptimizer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float learning_rate = 1;
  if (this->learning_rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->learning_rate(), output);
  }

  // float initial_accumulator = 2;
  if (this->initial_accumulator() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->initial_accumulator(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer)
}

::google::protobuf::uint8* TPUEmbeddingConfiguration_AdagradOptimizer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float learning_rate = 1;
  if (this->learning_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->learning_rate(), target);
  }

  // float initial_accumulator = 2;
  if (this->initial_accumulator() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->initial_accumulator(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer)
  return target;
}

size_t TPUEmbeddingConfiguration_AdagradOptimizer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float learning_rate = 1;
  if (this->learning_rate() != 0) {
    total_size += 1 + 4;
  }

  // float initial_accumulator = 2;
  if (this->initial_accumulator() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPUEmbeddingConfiguration_AdagradOptimizer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer)
  GOOGLE_DCHECK_NE(&from, this);
  const TPUEmbeddingConfiguration_AdagradOptimizer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TPUEmbeddingConfiguration_AdagradOptimizer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer)
    MergeFrom(*source);
  }
}

void TPUEmbeddingConfiguration_AdagradOptimizer::MergeFrom(const TPUEmbeddingConfiguration_AdagradOptimizer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.learning_rate() != 0) {
    set_learning_rate(from.learning_rate());
  }
  if (from.initial_accumulator() != 0) {
    set_initial_accumulator(from.initial_accumulator());
  }
}

void TPUEmbeddingConfiguration_AdagradOptimizer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPUEmbeddingConfiguration_AdagradOptimizer::CopyFrom(const TPUEmbeddingConfiguration_AdagradOptimizer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPUEmbeddingConfiguration_AdagradOptimizer::IsInitialized() const {
  return true;
}

void TPUEmbeddingConfiguration_AdagradOptimizer::Swap(TPUEmbeddingConfiguration_AdagradOptimizer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TPUEmbeddingConfiguration_AdagradOptimizer::InternalSwap(TPUEmbeddingConfiguration_AdagradOptimizer* other) {
  using std::swap;
  swap(learning_rate_, other->learning_rate_);
  swap(initial_accumulator_, other->initial_accumulator_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TPUEmbeddingConfiguration_AdagradOptimizer::GetMetadata() const {
  protobuf_tensorflow_2fcontrib_2ftpu_2fproto_2ftpu_5fembedding_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcontrib_2ftpu_2fproto_2ftpu_5fembedding_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TPUEmbeddingConfiguration_TPUEmbeddingTable::InitAsDefaultInstance() {
  ::tensorflow::tpu::_TPUEmbeddingConfiguration_TPUEmbeddingTable_default_instance_.gradient_descent_ = const_cast< ::tensorflow::tpu::TPUEmbeddingConfiguration_GradientDescentOptimizer*>(
      ::tensorflow::tpu::TPUEmbeddingConfiguration_GradientDescentOptimizer::internal_default_instance());
  ::tensorflow::tpu::_TPUEmbeddingConfiguration_TPUEmbeddingTable_default_instance_.adagrad_ = const_cast< ::tensorflow::tpu::TPUEmbeddingConfiguration_AdagradOptimizer*>(
      ::tensorflow::tpu::TPUEmbeddingConfiguration_AdagradOptimizer::internal_default_instance());
}
void TPUEmbeddingConfiguration_TPUEmbeddingTable::set_allocated_gradient_descent(::tensorflow::tpu::TPUEmbeddingConfiguration_GradientDescentOptimizer* gradient_descent) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_optimizer();
  if (gradient_descent) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      gradient_descent = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gradient_descent, submessage_arena);
    }
    set_has_gradient_descent();
    optimizer_.gradient_descent_ = gradient_descent;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable.gradient_descent)
}
void TPUEmbeddingConfiguration_TPUEmbeddingTable::set_allocated_adagrad(::tensorflow::tpu::TPUEmbeddingConfiguration_AdagradOptimizer* adagrad) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_optimizer();
  if (adagrad) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      adagrad = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, adagrad, submessage_arena);
    }
    set_has_adagrad();
    optimizer_.adagrad_ = adagrad;
  }
  // @@protoc_insertion_point(field_set_allocated:tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable.adagrad)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TPUEmbeddingConfiguration_TPUEmbeddingTable::kNameFieldNumber;
const int TPUEmbeddingConfiguration_TPUEmbeddingTable::kNumRowsFieldNumber;
const int TPUEmbeddingConfiguration_TPUEmbeddingTable::kWidthFieldNumber;
const int TPUEmbeddingConfiguration_TPUEmbeddingTable::kNumFeaturesFieldNumber;
const int TPUEmbeddingConfiguration_TPUEmbeddingTable::kGradientDescentFieldNumber;
const int TPUEmbeddingConfiguration_TPUEmbeddingTable::kAdagradFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TPUEmbeddingConfiguration_TPUEmbeddingTable::TPUEmbeddingConfiguration_TPUEmbeddingTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tensorflow_2fcontrib_2ftpu_2fproto_2ftpu_5fembedding_5fconfig_2eproto::InitDefaultsTPUEmbeddingConfiguration_TPUEmbeddingTable();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable)
}
TPUEmbeddingConfiguration_TPUEmbeddingTable::TPUEmbeddingConfiguration_TPUEmbeddingTable(const TPUEmbeddingConfiguration_TPUEmbeddingTable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&num_rows_, &from.num_rows_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_features_) -
    reinterpret_cast<char*>(&num_rows_)) + sizeof(num_features_));
  clear_has_optimizer();
  switch (from.optimizer_case()) {
    case kGradientDescent: {
      mutable_gradient_descent()->::tensorflow::tpu::TPUEmbeddingConfiguration_GradientDescentOptimizer::MergeFrom(from.gradient_descent());
      break;
    }
    case kAdagrad: {
      mutable_adagrad()->::tensorflow::tpu::TPUEmbeddingConfiguration_AdagradOptimizer::MergeFrom(from.adagrad());
      break;
    }
    case OPTIMIZER_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable)
}

void TPUEmbeddingConfiguration_TPUEmbeddingTable::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&num_rows_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_features_) -
      reinterpret_cast<char*>(&num_rows_)) + sizeof(num_features_));
  clear_has_optimizer();
  _cached_size_ = 0;
}

TPUEmbeddingConfiguration_TPUEmbeddingTable::~TPUEmbeddingConfiguration_TPUEmbeddingTable() {
  // @@protoc_insertion_point(destructor:tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable)
  SharedDtor();
}

void TPUEmbeddingConfiguration_TPUEmbeddingTable::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_optimizer()) {
    clear_optimizer();
  }
}

void TPUEmbeddingConfiguration_TPUEmbeddingTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPUEmbeddingConfiguration_TPUEmbeddingTable::descriptor() {
  ::protobuf_tensorflow_2fcontrib_2ftpu_2fproto_2ftpu_5fembedding_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcontrib_2ftpu_2fproto_2ftpu_5fembedding_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TPUEmbeddingConfiguration_TPUEmbeddingTable& TPUEmbeddingConfiguration_TPUEmbeddingTable::default_instance() {
  ::protobuf_tensorflow_2fcontrib_2ftpu_2fproto_2ftpu_5fembedding_5fconfig_2eproto::InitDefaultsTPUEmbeddingConfiguration_TPUEmbeddingTable();
  return *internal_default_instance();
}


void TPUEmbeddingConfiguration_TPUEmbeddingTable::clear_optimizer() {
// @@protoc_insertion_point(one_of_clear_start:tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable)
  switch (optimizer_case()) {
    case kGradientDescent: {
      delete optimizer_.gradient_descent_;
      break;
    }
    case kAdagrad: {
      delete optimizer_.adagrad_;
      break;
    }
    case OPTIMIZER_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = OPTIMIZER_NOT_SET;
}


void TPUEmbeddingConfiguration_TPUEmbeddingTable::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&num_rows_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_features_) -
      reinterpret_cast<char*>(&num_rows_)) + sizeof(num_features_));
  clear_optimizer();
  _internal_metadata_.Clear();
}

bool TPUEmbeddingConfiguration_TPUEmbeddingTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 num_rows = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_rows_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 width = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 num_features = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_features_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer gradient_descent = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gradient_descent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer adagrad = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_adagrad()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable)
  return false;
#undef DO_
}

void TPUEmbeddingConfiguration_TPUEmbeddingTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // int32 num_rows = 3;
  if (this->num_rows() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->num_rows(), output);
  }

  // int32 width = 4;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->width(), output);
  }

  // int32 num_features = 5;
  if (this->num_features() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->num_features(), output);
  }

  // .tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer gradient_descent = 6;
  if (has_gradient_descent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *optimizer_.gradient_descent_, output);
  }

  // .tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer adagrad = 7;
  if (has_adagrad()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *optimizer_.adagrad_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable)
}

::google::protobuf::uint8* TPUEmbeddingConfiguration_TPUEmbeddingTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // int32 num_rows = 3;
  if (this->num_rows() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->num_rows(), target);
  }

  // int32 width = 4;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->width(), target);
  }

  // int32 num_features = 5;
  if (this->num_features() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->num_features(), target);
  }

  // .tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer gradient_descent = 6;
  if (has_gradient_descent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *optimizer_.gradient_descent_, deterministic, target);
  }

  // .tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer adagrad = 7;
  if (has_adagrad()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *optimizer_.adagrad_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable)
  return target;
}

size_t TPUEmbeddingConfiguration_TPUEmbeddingTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 num_rows = 3;
  if (this->num_rows() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_rows());
  }

  // int32 width = 4;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  // int32 num_features = 5;
  if (this->num_features() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_features());
  }

  switch (optimizer_case()) {
    // .tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer gradient_descent = 6;
    case kGradientDescent: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *optimizer_.gradient_descent_);
      break;
    }
    // .tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer adagrad = 7;
    case kAdagrad: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *optimizer_.adagrad_);
      break;
    }
    case OPTIMIZER_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPUEmbeddingConfiguration_TPUEmbeddingTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable)
  GOOGLE_DCHECK_NE(&from, this);
  const TPUEmbeddingConfiguration_TPUEmbeddingTable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TPUEmbeddingConfiguration_TPUEmbeddingTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable)
    MergeFrom(*source);
  }
}

void TPUEmbeddingConfiguration_TPUEmbeddingTable::MergeFrom(const TPUEmbeddingConfiguration_TPUEmbeddingTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.num_rows() != 0) {
    set_num_rows(from.num_rows());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.num_features() != 0) {
    set_num_features(from.num_features());
  }
  switch (from.optimizer_case()) {
    case kGradientDescent: {
      mutable_gradient_descent()->::tensorflow::tpu::TPUEmbeddingConfiguration_GradientDescentOptimizer::MergeFrom(from.gradient_descent());
      break;
    }
    case kAdagrad: {
      mutable_adagrad()->::tensorflow::tpu::TPUEmbeddingConfiguration_AdagradOptimizer::MergeFrom(from.adagrad());
      break;
    }
    case OPTIMIZER_NOT_SET: {
      break;
    }
  }
}

void TPUEmbeddingConfiguration_TPUEmbeddingTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPUEmbeddingConfiguration_TPUEmbeddingTable::CopyFrom(const TPUEmbeddingConfiguration_TPUEmbeddingTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPUEmbeddingConfiguration_TPUEmbeddingTable::IsInitialized() const {
  return true;
}

void TPUEmbeddingConfiguration_TPUEmbeddingTable::Swap(TPUEmbeddingConfiguration_TPUEmbeddingTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TPUEmbeddingConfiguration_TPUEmbeddingTable::InternalSwap(TPUEmbeddingConfiguration_TPUEmbeddingTable* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(num_rows_, other->num_rows_);
  swap(width_, other->width_);
  swap(num_features_, other->num_features_);
  swap(optimizer_, other->optimizer_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TPUEmbeddingConfiguration_TPUEmbeddingTable::GetMetadata() const {
  protobuf_tensorflow_2fcontrib_2ftpu_2fproto_2ftpu_5fembedding_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcontrib_2ftpu_2fproto_2ftpu_5fembedding_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TPUEmbeddingConfiguration::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TPUEmbeddingConfiguration::kModelModeFieldNumber;
const int TPUEmbeddingConfiguration::kNumHostsFieldNumber;
const int TPUEmbeddingConfiguration::kNumTensornodesFieldNumber;
const int TPUEmbeddingConfiguration::kBatchSizeFieldNumber;
const int TPUEmbeddingConfiguration::kTableConfigFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TPUEmbeddingConfiguration::TPUEmbeddingConfiguration()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_tensorflow_2fcontrib_2ftpu_2fproto_2ftpu_5fembedding_5fconfig_2eproto::InitDefaultsTPUEmbeddingConfiguration();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:tensorflow.tpu.TPUEmbeddingConfiguration)
}
TPUEmbeddingConfiguration::TPUEmbeddingConfiguration(const TPUEmbeddingConfiguration& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      table_config_(from.table_config_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&model_mode_, &from.model_mode_,
    static_cast<size_t>(reinterpret_cast<char*>(&batch_size_) -
    reinterpret_cast<char*>(&model_mode_)) + sizeof(batch_size_));
  // @@protoc_insertion_point(copy_constructor:tensorflow.tpu.TPUEmbeddingConfiguration)
}

void TPUEmbeddingConfiguration::SharedCtor() {
  ::memset(&model_mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&batch_size_) -
      reinterpret_cast<char*>(&model_mode_)) + sizeof(batch_size_));
  _cached_size_ = 0;
}

TPUEmbeddingConfiguration::~TPUEmbeddingConfiguration() {
  // @@protoc_insertion_point(destructor:tensorflow.tpu.TPUEmbeddingConfiguration)
  SharedDtor();
}

void TPUEmbeddingConfiguration::SharedDtor() {
}

void TPUEmbeddingConfiguration::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TPUEmbeddingConfiguration::descriptor() {
  ::protobuf_tensorflow_2fcontrib_2ftpu_2fproto_2ftpu_5fembedding_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcontrib_2ftpu_2fproto_2ftpu_5fembedding_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TPUEmbeddingConfiguration& TPUEmbeddingConfiguration::default_instance() {
  ::protobuf_tensorflow_2fcontrib_2ftpu_2fproto_2ftpu_5fembedding_5fconfig_2eproto::InitDefaultsTPUEmbeddingConfiguration();
  return *internal_default_instance();
}


void TPUEmbeddingConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:tensorflow.tpu.TPUEmbeddingConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  table_config_.Clear();
  ::memset(&model_mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&batch_size_) -
      reinterpret_cast<char*>(&model_mode_)) + sizeof(batch_size_));
  _internal_metadata_.Clear();
}

bool TPUEmbeddingConfiguration::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:tensorflow.tpu.TPUEmbeddingConfiguration)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .tensorflow.tpu.TPUEmbeddingConfiguration.ModelMode model_mode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_model_mode(static_cast< ::tensorflow::tpu::TPUEmbeddingConfiguration_ModelMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 num_hosts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_hosts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 num_tensornodes = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &num_tensornodes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 batch_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &batch_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable table_config = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_table_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:tensorflow.tpu.TPUEmbeddingConfiguration)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:tensorflow.tpu.TPUEmbeddingConfiguration)
  return false;
#undef DO_
}

void TPUEmbeddingConfiguration::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:tensorflow.tpu.TPUEmbeddingConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.tpu.TPUEmbeddingConfiguration.ModelMode model_mode = 1;
  if (this->model_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->model_mode(), output);
  }

  // int32 num_hosts = 2;
  if (this->num_hosts() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->num_hosts(), output);
  }

  // int32 num_tensornodes = 3;
  if (this->num_tensornodes() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->num_tensornodes(), output);
  }

  // int32 batch_size = 4;
  if (this->batch_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->batch_size(), output);
  }

  // repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable table_config = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->table_config_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->table_config(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:tensorflow.tpu.TPUEmbeddingConfiguration)
}

::google::protobuf::uint8* TPUEmbeddingConfiguration::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:tensorflow.tpu.TPUEmbeddingConfiguration)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tensorflow.tpu.TPUEmbeddingConfiguration.ModelMode model_mode = 1;
  if (this->model_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->model_mode(), target);
  }

  // int32 num_hosts = 2;
  if (this->num_hosts() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->num_hosts(), target);
  }

  // int32 num_tensornodes = 3;
  if (this->num_tensornodes() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->num_tensornodes(), target);
  }

  // int32 batch_size = 4;
  if (this->batch_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->batch_size(), target);
  }

  // repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable table_config = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->table_config_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->table_config(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tensorflow.tpu.TPUEmbeddingConfiguration)
  return target;
}

size_t TPUEmbeddingConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tensorflow.tpu.TPUEmbeddingConfiguration)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable table_config = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->table_config_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->table_config(static_cast<int>(i)));
    }
  }

  // .tensorflow.tpu.TPUEmbeddingConfiguration.ModelMode model_mode = 1;
  if (this->model_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->model_mode());
  }

  // int32 num_hosts = 2;
  if (this->num_hosts() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_hosts());
  }

  // int32 num_tensornodes = 3;
  if (this->num_tensornodes() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->num_tensornodes());
  }

  // int32 batch_size = 4;
  if (this->batch_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->batch_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TPUEmbeddingConfiguration::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tensorflow.tpu.TPUEmbeddingConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  const TPUEmbeddingConfiguration* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TPUEmbeddingConfiguration>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tensorflow.tpu.TPUEmbeddingConfiguration)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tensorflow.tpu.TPUEmbeddingConfiguration)
    MergeFrom(*source);
  }
}

void TPUEmbeddingConfiguration::MergeFrom(const TPUEmbeddingConfiguration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tensorflow.tpu.TPUEmbeddingConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  table_config_.MergeFrom(from.table_config_);
  if (from.model_mode() != 0) {
    set_model_mode(from.model_mode());
  }
  if (from.num_hosts() != 0) {
    set_num_hosts(from.num_hosts());
  }
  if (from.num_tensornodes() != 0) {
    set_num_tensornodes(from.num_tensornodes());
  }
  if (from.batch_size() != 0) {
    set_batch_size(from.batch_size());
  }
}

void TPUEmbeddingConfiguration::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tensorflow.tpu.TPUEmbeddingConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TPUEmbeddingConfiguration::CopyFrom(const TPUEmbeddingConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tensorflow.tpu.TPUEmbeddingConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TPUEmbeddingConfiguration::IsInitialized() const {
  return true;
}

void TPUEmbeddingConfiguration::Swap(TPUEmbeddingConfiguration* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TPUEmbeddingConfiguration::InternalSwap(TPUEmbeddingConfiguration* other) {
  using std::swap;
  CastToBase(&table_config_)->InternalSwap(CastToBase(&other->table_config_));
  swap(model_mode_, other->model_mode_);
  swap(num_hosts_, other->num_hosts_);
  swap(num_tensornodes_, other->num_tensornodes_);
  swap(batch_size_, other->batch_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TPUEmbeddingConfiguration::GetMetadata() const {
  protobuf_tensorflow_2fcontrib_2ftpu_2fproto_2ftpu_5fembedding_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tensorflow_2fcontrib_2ftpu_2fproto_2ftpu_5fembedding_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tpu
}  // namespace tensorflow
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::tpu::TPUEmbeddingConfiguration_GradientDescentOptimizer* Arena::Create< ::tensorflow::tpu::TPUEmbeddingConfiguration_GradientDescentOptimizer >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::tpu::TPUEmbeddingConfiguration_GradientDescentOptimizer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::tpu::TPUEmbeddingConfiguration_AdagradOptimizer* Arena::Create< ::tensorflow::tpu::TPUEmbeddingConfiguration_AdagradOptimizer >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::tpu::TPUEmbeddingConfiguration_AdagradOptimizer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::tpu::TPUEmbeddingConfiguration_TPUEmbeddingTable* Arena::Create< ::tensorflow::tpu::TPUEmbeddingConfiguration_TPUEmbeddingTable >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::tpu::TPUEmbeddingConfiguration_TPUEmbeddingTable >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::tensorflow::tpu::TPUEmbeddingConfiguration* Arena::Create< ::tensorflow::tpu::TPUEmbeddingConfiguration >(Arena* arena) {
  return Arena::CreateInternal< ::tensorflow::tpu::TPUEmbeddingConfiguration >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
